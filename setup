#!/usr/bin/env bash

set -u

## Globals ##
# Recipes
RECIPE_DIR="./recipes"
TARGET_RECIPE_NAME="${TARGET_RECIPE_NAME:-default}"

# Platform
KERNEL_NAME="$(uname -s)"
CODESPACES="${CODESPACES:-false}"

## functions ##
source scripts/common.sh

## Main ##
# load recipe(s)
source_recipe "${TARGET_RECIPE_NAME}"

if "${AUTOCHOOSE_PLATFORM_RECIPE}"; then
    case $KERNEL_NAME in
        Darwin)
            platform_recipe="macosx"
            ;;
        Linux)
            if "$CODESPACES"; then
                platform_recipe="codespaces"
            fi
            ;;
    esac

    echo_info "Automatically detected platform recipe: '$platform_recipe'"
    source_recipe "$platform_recipe"
fi

# sudo
if "${SUDO_UP_FRONT}"; then
    sudo_up_front
fi

# zsh
if "${SETUP_ZSH}"; then
    echo_info "Setting up zsh"

    mkdir -p "$HOME/.zshrc.d"
    mkdir -p "$HOME/.local/share/zsh/completions"

    if "${INSTALL_OH_MY_ZSH}"; then
        ./scripts/oh-my-zsh.sh install
    fi
fi

# apt
if "${SETUP_APT}"; then
    echo_info "Setting up apt"

    if [ -n "${APT_INSTALL_PACKAGES[*]:-}" ]; then
        ./scripts/apt.sh install "${APT_INSTALL_PACKAGES[@]}"
    fi

    if [ -n "${APT_REMOVE_PACKAGES[*]:-}" ]; then
        ./scripts/apt.sh remove "${APT_INSTALL_PACKAGES[@]}"
    fi

    if "${APT_UPGRADE}"; then
        ./scripts/apt.sh upgrade
    fi

    if "${APT_CLEAN}"; then
        ./scripts/apt.sh clean
    fi
fi

# homebrew
if "${INSTALL_HOMEBREW}"; then
    echo_info "Setting up homebrew"

    ./scripts/homebrew.sh install
    eval "$(/opt/homebrew/bin/brew shellenv)"

    if [ -f "${HOMEBREW_BUNDLE_FILE:-}" ]; then
        ./scripts/homebrew.sh bundle
    fi
fi

# stow
if [ -n "${STOW_PACKAGES[*]:-}" ]; then
    echo_info "Install requested dotfiles packages via stow"

    ./scripts/stow.sh install "${STOW_PACKAGES[@]}"
fi

# atuin
if [ -n "${INSTALL_ATUIN}" ]; then
    echo_info "Setting up atuin"

    ./scripts/atuin.sh install
fi

# macos
if "${CONFIGURE_MACOS_SYSTEM}"; then
    echo_info "Configure macOS system settings"

    if [ ! "${SET_MACOS_HOSTNAME}" == "None" ]; then
        ./scripts/macos.sh hostname "${SET_MACOS_HOSTNAME}"
    fi

    ./scripts/macos.sh configure
fi
